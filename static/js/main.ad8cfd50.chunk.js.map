{"version":3,"sources":["componetss/Todoeslist.js","App.js","index.js"],"names":["Todoeslist","useState","inputData","setInputData","items","setItems","toggleSubmit","setToggleSubmit","isEditItem","setIsEditItem","addItem","map","elem","id","name","allInputData","Date","getTime","toString","alert","useEffect","localStorage","setItem","JSON","stringify","className","style","textAlign","type","placeholder","value","onChange","e","target","title","onClick","newEditItem","find","console","log","editItem","index","updateditems","filter","deleteItem","App","ReactDOM","render","document","getElementById"],"mappings":"kPA8HeA,EA3HI,WAEf,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwCJ,oBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAoCN,mBAAS,MAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KAEMC,EAAU,WACZ,GAAKR,EAEE,GAAIA,IAAcI,EACrBD,EACID,EAAMO,KAAI,SAACC,GACP,OAAIA,EAAKC,KAAOL,EACL,2BAAKI,GAAZ,IAAkBE,KAAMZ,IAErBU,MAGfL,GAAgB,GAEhBJ,EAAa,IAEbM,EAAc,UACX,CACH,IAAMM,EAAe,CAAEF,IAAI,IAAIG,MAAOC,UAAUC,WAAYJ,KAAMZ,GAClEG,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBZ,EAAa,SAlBbgB,MAAM,mBAkEd,OAJAC,qBAAU,WACNC,aAAaC,QAAQ,QAASC,KAAKC,UAAUpB,MAC9C,CAACA,IAGA,mCACI,qBAAKqB,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAIC,MAAO,CAACC,UAAW,UAAvB,UAAkC,sBAAMF,UAAU,YAAhB,kBAAuC,sBAAMA,UAAU,YAAhB,qBAGzE,sBAAKA,UAAU,WAAf,UACI,uBAAOG,KAAK,OAAOC,YAAY,sBAC3BC,MAAO5B,EACP6B,SAAU,SAACC,GAAD,OAAO7B,EAAa6B,EAAEC,OAAOH,UAGvCxB,EAAe,mBAAGmB,UAAU,qBAAqBS,MAAM,WAAWC,QAASzB,IACvE,mBAAGe,UAAU,sBAAsBS,MAAM,cAAcC,QAASzB,OAK5E,qBAAKe,UAAU,YAAf,SAGQrB,EAAMO,KAAI,SAACC,GACP,OACI,sBAAKa,UAAU,WAAf,UACI,6BAAKb,EAAKE,OACV,sBAAKW,UAAU,WAAf,UACI,mBAAGA,UAAU,sBAAsBS,MAAM,YAAYC,QAAS,kBApDrF,SAACtB,GACd,IAAIuB,EAAchC,EAAMiC,MAAK,SAACzB,GAC1B,OAAOA,EAAKC,KAAOA,KAEvByB,QAAQC,IAAIH,GAEZ7B,GAAgB,GAEhBJ,EAAaiC,EAAYtB,MAEzBL,EAAcI,GA0C0F2B,CAAS5B,EAAKC,OAClF,mBAAGY,UAAU,2BAA2BS,MAAM,cAAcC,QAAS,kBAtE1F,SAACM,GAChB,IAAMC,EAAetC,EAAMuC,QAAO,SAAC/B,GAC/B,OAAO6B,IAAU7B,EAAKC,MAG1BR,EAASqC,GAiEsGE,CAAWhC,EAAKC,YAJpED,EAAKC,SAepD,qBAAKY,UAAU,YAAf,SACI,yBAAQA,UAAU,eAAgBU,QAjDpC,WACd9B,EAAS,KAgDO,UAAsD,gDAAtD,iBC1GTwC,G,MARH,WACV,OACE,mCACE,cAAC,EAAD,QCDNC,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ad8cfd50.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport \"../componetss/Todoeslist.css\"\r\n\r\nconst Todoeslist = () => {\r\n\r\n    const [inputData, setInputData] = useState('');\r\n    const [items, setItems] = useState([]);\r\n    const [toggleSubmit, setToggleSubmit] = useState(true);\r\n    const [isEditItem, setIsEditItem] = useState(null);\r\n\r\n    const addItem = () => {\r\n        if (!inputData) {\r\n            alert('plzz fill data');\r\n        } else if (inputData && !toggleSubmit) {\r\n            setItems(\r\n                items.map((elem) => {\r\n                    if (elem.id === isEditItem) {\r\n                        return { ...elem, name: inputData }\r\n                    }\r\n                    return elem;\r\n                })\r\n            )\r\n            setToggleSubmit(true);\r\n\r\n            setInputData('');\r\n\r\n            setIsEditItem(null);\r\n        } else {\r\n            const allInputData = { id: new Date().getTime().toString(), name: inputData }\r\n            setItems([...items, allInputData]);\r\n            setInputData('')\r\n        }\r\n    }\r\n\r\n\r\n    // delete the items\r\n    const deleteItem = (index) => {\r\n        const updateditems = items.filter((elem) => {\r\n            return index !== elem.id;\r\n        });\r\n\r\n        setItems(updateditems);\r\n    }\r\n\r\n    // edit the item\r\n    //     When user clikc on edit button \r\n\r\n    // 1: get the id and name of the data which user clicked to edit\r\n    // 2: set the toggle mode to change the submit button into edit button\r\n    // 3: Now update the value of the setInput with the new updated value to edit. \r\n    // 4: To pass the current element Id to new state variable for reference \r\n\r\n\r\n    const editItem = (id) => {\r\n        let newEditItem = items.find((elem) => {\r\n            return elem.id === id\r\n        });\r\n        console.log(newEditItem);\r\n\r\n        setToggleSubmit(false);\r\n\r\n        setInputData(newEditItem.name);\r\n\r\n        setIsEditItem(id);\r\n\r\n    }\r\n\r\n\r\n    // remove all \r\n    const removeAll = () => {\r\n        setItems([]);\r\n    }\r\n\r\n    // add data to localStorage\r\n    useEffect(() => {\r\n        localStorage.setItem('lists', JSON.stringify(items))\r\n    }, [items]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <h1 style={{textAlign: 'center'}}><span className=\"todo_span\">Todo</span><span className=\"list_span\" >list</span>\r\n                    </h1>\r\n\r\n                    <div className=\"addItems\">\r\n                        <input type=\"text\" placeholder=\"✍ Add Items...\"\r\n                            value={inputData}\r\n                            onChange={(e) => setInputData(e.target.value)}\r\n                        />\r\n                        {\r\n                            toggleSubmit ? <i className=\"fa fa-plus add-btn\" title=\"Add Item\" onClick={addItem}></i> :\r\n                                <i className=\"far fa-edit add-btn\" title=\"Update Item\" onClick={addItem}></i>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <div className=\"showItems\">\r\n\r\n                        {\r\n                            items.map((elem) => {\r\n                                return (\r\n                                    <div className=\"eachItem\" key={elem.id}>\r\n                                        <h3>{elem.name}</h3>\r\n                                        <div className=\"todo-btn\">\r\n                                            <i className=\"far fa-edit add-btn\" title=\"Edit Item\" onClick={() => editItem(elem.id)}></i>\r\n                                            <i className=\"far fa-trash-alt add-btn\" title=\"Delete Item\" onClick={() => deleteItem(elem.id)}></i>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    {/* clear all button  */}\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\"  onClick={removeAll}><span> CHECK LIST </span> </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todoeslist","import React from 'react'\nimport Todoeslist from './componetss/Todoeslist.js'\nimport \"./App.css\"\n\nconst App = () => {\n  return (\n    <>\n      <Todoeslist/>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}